{
    "parser": "@typescript-eslint/parser",
    "env": {
        "node": true,
        "commonjs": true,
        "es2020": true,
        "mocha": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "prettier"
    ],
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "rules": {
        "no-implicit-coercion": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/member-ordering": ["off"],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "vars": "all",
                "args": "none",
                "ignoreRestSiblings": false,
                "varsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/no-use-before-define": "off",
        "eqeqeq": ["error", "always"],
        "no-camelcase": "off",
        "no-unused-vars": "off",
        "lines-between-class-members": "error",
        "padding-line-between-statements": [
            "error",
            { "blankLine": "always", "prev": "for", "next": "*" },
            { "blankLine": "always", "prev": "while", "next": "*" },
            { "blankLine": "always", "prev": "class", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "class" },
            { "blankLine": "always", "prev": "switch", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "switch" },
            { "blankLine": "always", "prev": "function", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "function" },
            { "blankLine": "always", "prev": "if", "next": "for" },
            { "blankLine": "always", "prev": "while", "next": "for" },
            { "blankLine": "always", "prev": "switch", "next": "for" },
            { "blankLine": "always", "prev": "try", "next": "*" },
            { "blankLine": "always", "prev": "*", "next": "try" },
            { "blankLine": "always", "prev": "multiline-let", "next": "*" },
            { "blankLine": "always", "prev": "multiline-const", "next": "*" }
        ]
    },
    "ignorePatterns": [
        "src/generated/",
        "var/**/*.ts",
        "src/migration/",
        "var/upload_source_maps.js",
        "toyscripts",
        "var/circular.ts"
    ],
    "reportUnusedDisableDirectives": true
}
